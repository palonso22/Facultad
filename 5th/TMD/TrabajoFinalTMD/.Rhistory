rm(list = ls())
library(randomForest)
library(ggplot2)
#library(ggpubr)
library(e1071)
library(stats)
library(cluster)
library(MASS)
library(knitr)
library(kableExtra)
library(adabag)
library(neuralnet)
library(nnet)
# los datos vienen separados en 2 partes, hacemos la union
data1 <- read.csv("test.csv")
setwd("~/Desktop/Facultad/5to\ aÃ±o/TMD/TrabajoFinalTMD")
# los datos vienen separados en 2 partes, hacemos la union
data1 <- read.csv("test.csv")
data2 <- read.csv("train.csv")
data <- rbind(data1,data2)
#sacamos la etiqueta del sujeto
data <- data[,-562]
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(labels))
names(train_2)<-c(names(train),targetLabels)
model <- neuralnet(targetLabels~.,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE)
return(misclass(max.col(compute(nn,test)$net.result),max.col(testTarget)))
}
misclass <- function(res,test){
tab <- table(res,test)
optimalMatch <- matchClasses(as.matrix(tab),method="exact",verbose = TRUE)
m <- tab[,optimalMatch]
ctos <- length(test)
return((ctos-sum(diag(m)))/ctos)
}
#clasificacion
testPerformance <- function(data,tuneModel,k,class,formula){
folds <- createFolds(1:nrow(data),k)
errors <- double(k)
for(i in 1:k){
print(i)
trainIx <- as.vector(unlist(folds[-i]))
testIx <- as.vector(unlist(folds[i]))
train <- data[trainIx,]
trainClass <- class[trainIx]
test <- data[testIx,]
testClass <- class[testIx]
errors[i] <- tuneModel(train,trainClass,test,testClass,formula)
}
return(mean(errors))
}
resnn <-testPerformance(subdata,neuralNetwork,5,subdata[,6],Activity~.)
# usamos ada boosting para clasificar los datos
n<-5
subdata<-data[,c(res$ordered.features.list[1:n],562)]
#write.csv(as.data.frame(res),"variableSelection")
res <- read.csv("variableSelection")
# usamos ada boosting para clasificar los datos
n<-5
subdata<-data[,c(res$ordered.features.list[1:n],562)]
subdata[,n+1]<-as.factor(subdata[,n+1])
resnn <-testPerformance(subdata,neuralNetwork,5,subdata[,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(targetMatrix))
names(train_2)<-c(names(train),targetLabels)
model <- neuralnet(targetLabels~.,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE)
return(misclass(max.col(compute(nn,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata,neuralNetwork,5,subdata[,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(targetMatrix))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(targetLabels~.,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE)
return(misclass(max.col(compute(nn,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata,neuralNetwork,5,subdata[,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(targetMatrix))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(targetLabels~.,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE)
return(misclass(max.col(compute(nn,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata,neuralNetwork,5,subdata[,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(targetMatrix))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(l1+l2+l3+l4+l5+l6~.,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE)
return(misclass(max.col(compute(nn,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata,neuralNetwork,5,subdata[,6],Activity~.)
resnn <-testPerformance(subdata[,-6],neuralNetwork,5,subdata[,6],Activity~.)
resnn <-testPerformance(subdata[1:100,-(n+1)],neuralNetwork,5,subdata[1:100,6],Activity~.)
resnn <-testPerformance(subdata[1:1000,-(n+1)],neuralNetwork,5,subdata[1:1000,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(targetMatrix))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(l1+l2+l3+l4+l5+l6~.,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE)
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[1:1000,-(n+1)],neuralNetwork,5,subdata[1:1000,6],Activity~.)
resnn <-testPerformance(subdata[1:8000,-(n+1)],neuralNetwork,5,subdata[1:1000,6],Activity~.)
print(resnn)
resnn <-testPerformance(subdata[1:800,-(n+1)],neuralNetwork,5,subdata[1:1000,6],Activity~.)
isnumerica(subdata)
isnumeric(subdata)
is.numeric(subdata)
is.numeric(subdata[,1])
is.numeric(subdata[,2])
is.numeric(subdata[,3])
is.numeric(subdata[,4])
is.numeric(subdata[,5])
is.numeric(subdata[,6])
is.numeric(subdata[,-6])
# usamos ada boosting para clasificar los datos
n<-5
subdata<-data[,c(res$ordered.features.list[1:n],562)]
subdata[,n+1]<-as.factor(subdata[,n+1])
resnn <-testPerformance(subdata[1:800,-6],neuralNetwork,5,subdata[1:800,6],Activity~.)
subdata
subdata[1:100,]
subdata[1:100,-6]
paste0("l",1:5,sepby="+")
paste("l",1:5,collapse="+")
paste0("l",1:5,collapse="+")
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-as.integer(class.ind(c(trainClass,testClass)))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(targetMatrix))
form<-as.formula(paste0(targetLabels,"~.",collapse="+"))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE)
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[1:800,-6],neuralNetwork,5,subdata[1:800,6],Activity~.)
as.integer(cbind(c("1","2"),c("3","4")  ))
as.integer(rbind(c("1","2"),c("3","4")  ))
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
print(targetMatrix)
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(targetMatrix))
print(paste0(targetLabels,"~.",collapse="+"))
form<-as.formula(paste0(targetLabels,"~.",collapse="+"))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE)
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[1:800,-6],neuralNetwork,5,subdata[1:800,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
print(targetMatrix)
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(targetMatrix))
print(paste0(paste0(targetLabels,collapse="+"),"~."))
form<-as.formula(paste0(targetLabels,"~.",collapse="+"))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE)
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[1:800,-6],neuralNetwork,5,subdata[1:800,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
print(targetMatrix)
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(targetMatrix))
print(paste(paste0(targetLabels,collapse="+"),"~."))
form<-as.formula(paste0(targetLabels,"~.",collapse="+"))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE)
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[1:800,-6],neuralNetwork,5,subdata[1:800,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
print(targetMatrix)
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(targetMatrix))
form<-as.formula(paste(paste0(targetLabels,collapse="+"),"~."))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE)
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[1:800,-6],neuralNetwork,5,subdata[1:800,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
print(is.numeric(target))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
form<-as.formula(paste(paste0(targetLabels,collapse="+"),"~."))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE)
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[1:800,-6],neuralNetwork,5,subdata[1:800,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
print(is.numeric(targetMatrix))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
form<-as.formula(paste(paste0(targetLabels,collapse="+"),"~."))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE)
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[1:800,-6],neuralNetwork,5,subdata[1:800,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
print(is.numeric(targetMatrix))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:n)
form<-as.formula(paste(paste0(targetLabels,collapse="+"),"~."))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE)
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[1:800,-6],neuralNetwork,5,subdata[1:800,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
print(is.numeric(targetMatrix))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(targetMatrix))
print(targetLabels)
form<-as.formula(paste(paste0(targetLabels,collapse="+"),"~."))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE)
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[1:800,-6],neuralNetwork,5,subdata[1:800,6],Activity~.)
# usamos ada boosting para clasificar los datos
n<-5
r<-10
subdata<-data[,c(res$ordered.features.list[1:n],562)]
subdata[,n+1]<-as.factor(subdata[,n+1])
resnn <-testPerformance(subdata[1:r,-6],neuralNetwork,5,subdata[1:r,6],Activity~.)
# usamos ada boosting para clasificar los datos
n<-5
r<-100
resnn <-testPerformance(subdata[1:r,-6],neuralNetwork,5,subdata[1:r,6],Activity~.)
# usamos ada boosting para clasificar los datos
n<-5
r<-1000
resnn <-testPerformance(subdata[1:r,-6],neuralNetwork,5,subdata[1:r,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
print(is.numeric(targetMatrix))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(targetMatrix))
print(targetLabels)
form<-as.formula(paste(paste0(targetLabels,collapse="+"),"~."))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=5,act.fct = "ce", linear.output = FALSE,lifesign = "minimal")
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[1:r,-6],neuralNetwork,5,subdata[1:r,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
print(is.numeric(targetMatrix))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(targetMatrix))
print(targetLabels)
form<-as.formula(paste(paste0(targetLabels,collapse="+"),"~."))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE,lifesign = "minimal")
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[1:r,-6],neuralNetwork,5,subdata[1:r,6],Activity~.)
resnn <-testPerformance(subdata[1:r,-6],neuralNetwork,5,subdata[1:r,6],Activity~.)
resnn <-testPerformance(subdata[1:r,-6],neuralNetwork,5,subdata[1:r,6],Activity~.)
resnn <-testPerformance(subdata[1:r,-6],neuralNetwork,5,subdata[1:r,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
print(is.numeric(targetMatrix))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(targetMatrix))
print(targetLabels)
form<-as.formula(paste(paste0(targetLabels,collapse="+"),"~."))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=c(13, 10, 3),act.fct = "logistic", linear.output = FALSE,lifesign = "minimal")
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[1:r,-6],neuralNetwork,5,subdata[1:r,6],Activity~.)
# usamos ada boosting para clasificar los datos
n<-5
r<-1000
resnn <-testPerformance(subdata[,-6],neuralNetwork,5,subdata[,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
print(is.numeric(targetMatrix))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
targetLabels<-paste0("l",1:ncol(targetMatrix))
print(targetLabels)
form<-as.formula(paste(paste0(targetLabels,collapse="+"),"~."))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE,lifesign = "minimal")
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[,-6],neuralNetwork,5,subdata[,6],Activity~.)
subdata[,-5]
subdata[,-6]
is.numeric(subdata[,-6])
is.numeric(subdata[,1])
is.numeric(subdata[,2])
is.numeric(subdata[,])
is.numeric(subdata[,3])
is.numeric(subdata[,4])
is.numeric(subdata[,5])
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
print(is.numeric(testTarget))
targetLabels<-paste0("l",1:ncol(targetMatrix))
print(targetLabels)
form<-as.formula(paste(paste0(targetLabels,collapse="+"),"~."))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE,lifesign = "minimal")
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[,-6],neuralNetwork,5,subdata[,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
n <- length(trainClass)
trainTarget <-targetMatrix[1:n,]
testTarget<- targetMatrix[-(1:n),]
train2<- cbind(train,trainTarget)
print(is.numeric(testTarget))
targetLabels<-paste0("l",1:ncol(targetMatrix))
form<-as.formula(paste(paste0(targetLabels,collapse="+"),"~."))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE,lifesign = "minimal")
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[,-6],neuralNetwork,5,subdata[,6],Activity~.)
#Neural networks
neuralNetwork <- function(train,trainClass,test,testClass,formula){
targetMatrix<-class.ind(c(trainClass,testClass))
n <- length(trainClass)
trainTarget <-as.numeric(targetMatrix[1:n,])
testTarget<- as.numeric(targetMatrix[-(1:n),])
train2<- cbind(train,trainTarget)
print(is.numeric(testTarget))
targetLabels<-paste0("l",1:ncol(targetMatrix))
form<-as.formula(paste(paste0(targetLabels,collapse="+"),"~."))
names(train2)<-c(names(train),targetLabels)
model <- neuralnet(form,data=train2, hidden=5,act.fct = "logistic", linear.output = FALSE,lifesign = "minimal")
return(misclass(max.col(compute(model,test)$net.result),max.col(testTarget)))
}
resnn <-testPerformance(subdata[,-6],neuralNetwork,5,subdata[,6],Activity~.)
