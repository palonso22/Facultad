Coupled
    {
    Type = Root
    Name = robot3
    Ports = 0; 0
    Description = 
    Graphic
        {
        Position = 0; 0
        Dimension = 600; 600
        Direction = Right
        Color = 15
        Icon = 
        Window = 5000; 5000; 5000; 5000
        }
    Parameters
        {
        }
    System
        {
        Coupled
            {
            Type = Coordinator
            Name = Coupled0
            Ports = 2; 0
            Description = Coupled DEVS model
            Graphic
                {
                Position = -5280; -2310
                Dimension = 675; 720
                Direction = Right
                Color = 15
                Icon = %basicelements%coupled.svg
                Window = 5000; 5000; 5000; 5000
                }
            Parameters
                {
                }
            System
                {
                Inport
                    {
                    Name = Inport1
                    CoupledPort = 1
                    Description = 
                    Graphic
                        {
                        Position = -15825 ; 5400
                        Dimension = 600
                        Direction = Right
                        }
                    }
                Inport
                    {
                    Name = Inport0
                    CoupledPort = 2
                    Description = 
                    Graphic
                        {
                        Position = -15705 ; 6525
                        Dimension = 525
                        Direction = Right
                        }
                    }
                Atomic
                    {
                    Name = X(t)0
                    Ports = 1 ; 1
                    Path = discrete/qoperator_sci.h
                    Description = Discrete delay
                    Graphic
                        {
                        Position = -6585 ; 465
                        Dimension = 585 ; 570
                        Direction = Right
                        Color = 15
                        Icon = %discrete%qoperator.svg
                        }
                    Parameters
                        {
                        x0 = Str; 0 ; Initial state (Scilab expression)
                        Ts = Str; h ; Sampling Period (Scilab expression)
                        }
                    }
                Atomic
                    {
                    Name = y(t)0
                    Ports = 1 ; 1
                    Path = discrete/qoperator_sci.h
                    Description = Discrete delay
                    Graphic
                        {
                        Position = -5805 ; 2070
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %discrete%qoperator.svg
                        }
                    Parameters
                        {
                        x0 = Str; 0 ; Initial state (Scilab expression)
                        Ts = Str; h ; Sampling Period (Scilab expression)
                        }
                    }
                Atomic
                    {
                    Name = v(t)0
                    Ports = 1 ; 1
                    Path = discrete/qoperator_sci.h
                    Description = Discrete delay
                    Graphic
                        {
                        Position = -6255 ; 5070
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %discrete%qoperator.svg
                        }
                    Parameters
                        {
                        x0 = Str; 0 ; Initial state (Scilab expression)
                        Ts = Str; h ; Sampling Period (Scilab expression)
                        }
                    }
                Atomic
                    {
                    Name = theta0
                    Ports = 1 ; 1
                    Path = discrete/qoperator_sci.h
                    Description = Discrete delay
                    Graphic
                        {
                        Position = -6030 ; 3615
                        Dimension = 510 ; 585
                        Direction = Right
                        Color = 15
                        Icon = %discrete%qoperator.svg
                        }
                    Parameters
                        {
                        x0 = Str; 0 ; Initial state (Scilab expression)
                        Ts = Str; h ; Sampling Period (Scilab expression)
                        }
                    }
                Atomic
                    {
                    Name = psi0
                    Ports = 1 ; 1
                    Path = discrete/qoperator_sci.h
                    Description = Discrete delay
                    Graphic
                        {
                        Position = -6180 ; 6345
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %discrete%qoperator.svg
                        }
                    Parameters
                        {
                        x0 = Str; 0 ; Initial state (Scilab expression)
                        Ts = Str; h ; Sampling Period (Scilab expression)
                        }
                    }
                Atomic
                    {
                    Name = X(t+h)0
                    Ports = 2 ; 1
                    Path = qss/qss_wsum.h
                    Description = y = K[0] * u0 + K[1] * u1 + ... + K[7] * u7 (QSS1 to 4)
                    Graphic
                        {
                        Position = -8895 ; 615
                        Dimension = 840 ; 435
                        Direction = Right
                        Color = 15
                        Icon = %continuous%sum.svg
                        }
                    Parameters
                        {
                        K[0] = Str; 1 ; 
                        K[1] = Str; h ; 
                        K[2] = Str; 0 ; 
                        K[3] = Str; 0 ; 
                        K[4] = Str; 0 ; 
                        K[5] = Str; 0 ; 
                        K[6] = Str; 0 ; 
                        K[7] = Str; 0 ; 
                        Inputs = Str; %Inputs ; 
                        }
                    }
                Atomic
                    {
                    Name = cos(theta)*cos(psi)*v(t)0
                    Ports = 3 ; 1
                    Path = qss/qss_nlfunction.h
                    Description = Nonlinear function. (QSS1 to 4)
                    Graphic
                        {
                        Position = -11805 ; 570
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %continuous%nl_function.svg
                        }
                    Parameters
                        {
                        Expression = Str; cos(u0)*cos(u1)*u2 ; Expression in terms of u0,u1,....,u9
                        Inputs = Str; %Inputs ; 
                        }
                    }
                Atomic
                    {
                    Name = sin(theta)*cos(psi)*v(t)0
                    Ports = 3 ; 1
                    Path = qss/qss_nlfunction.h
                    Description = Nonlinear function. (QSS1 to 4)
                    Graphic
                        {
                        Position = -9705 ; 2220
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %continuous%nl_function.svg
                        }
                    Parameters
                        {
                        Expression = Str; sin(u0)*cos(u1)*u2 ; Expression in terms of u0,u1,....,u9
                        Inputs = Str; %Inputs ; 
                        }
                    }
                Atomic
                    {
                    Name = y(t+h)0
                    Ports = 2 ; 1
                    Path = qss/qss_wsum.h
                    Description = y = K[0] * u0 + K[1] * u1 + ... + K[7] * u7 (QSS1 to 4)
                    Graphic
                        {
                        Position = -7905 ; 2040
                        Dimension = 675 ; 720
                        Direction = Right
                        Color = 15
                        Icon = %continuous%sum.svg
                        }
                    Parameters
                        {
                        K[0] = Str; 1 ; 
                        K[1] = Str; h ; 
                        K[2] = Str; 0 ; 
                        K[3] = Str; 0 ; 
                        K[4] = Str; 0 ; 
                        K[5] = Str; 0 ; 
                        K[6] = Str; 0 ; 
                        K[7] = Str; 0 ; 
                        Inputs = Str; %Inputs ; 
                        }
                    }
                Atomic
                    {
                    Name = sin(psi)*v(t)0
                    Ports = 2 ; 1
                    Path = qss/qss_nlfunction.h
                    Description = Nonlinear function. (QSS1 to 4)
                    Graphic
                        {
                        Position = -9255 ; 3720
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %continuous%nl_function.svg
                        }
                    Parameters
                        {
                        Expression = Str; sin(u0)*u1 ; Expression in terms of u0,u1,....,u9
                        Inputs = Str; %Inputs ; 
                        }
                    }
                Atomic
                    {
                    Name = theta(t+h)0
                    Ports = 2 ; 1
                    Path = qss/qss_wsum.h
                    Description = y = K[0] * u0 + K[1] * u1 + ... + K[7] * u7 (QSS1 to 4)
                    Graphic
                        {
                        Position = -8055 ; 3540
                        Dimension = 675 ; 720
                        Direction = Right
                        Color = 15
                        Icon = %continuous%sum.svg
                        }
                    Parameters
                        {
                        K[0] = Str; 1 ; 
                        K[1] = Str; h/L ; 
                        K[2] = Str; 0 ; 
                        K[3] = Str; 0 ; 
                        K[4] = Str; 0 ; 
                        K[5] = Str; 0 ; 
                        K[6] = Str; 0 ; 
                        K[7] = Str; 0 ; 
                        Inputs = Str; %Inputs ; 
                        }
                    }
                Atomic
                    {
                    Name = To Disk0
                    Ports = 1 ; 0
                    Path = sinks\to_disk.h
                    Description = Save the values (event,t) in a file.
                    Graphic
                        {
                        Position = -3705 ; 45
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %sinks%todisk.svg
                        }
                    Parameters
                        {
                        File = Str; x.csv ; file name
                        }
                    }
                Atomic
                    {
                    Name = To Disk1
                    Ports = 1 ; 0
                    Path = sinks\to_disk.h
                    Description = Save the values (event,t) in a file.
                    Graphic
                        {
                        Position = -3105 ; 1770
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %sinks%todisk.svg
                        }
                    Parameters
                        {
                        File = Str; y.csv ; file name
                        }
                    }
                Atomic
                    {
                    Name = v(t+h)0
                    Ports = 2 ; 1
                    Path = qss/qss_wsum.h
                    Description = y = K[0] * u0 + K[1] * u1 + ... + K[7] * u7 (QSS1 to 4)
                    Graphic
                        {
                        Position = -7605 ; 5040
                        Dimension = 675 ; 720
                        Direction = Right
                        Color = 15
                        Icon = %continuous%sum.svg
                        }
                    Parameters
                        {
                        K[0] = Str; h ; 
                        K[1] = Str; 1 ; 
                        K[2] = Str; 0 ; 
                        K[3] = Str; 0 ; 
                        K[4] = Str; 0 ; 
                        K[5] = Str; 0 ; 
                        K[6] = Str; 0 ; 
                        K[7] = Str; 0 ; 
                        Inputs = Str; %Inputs ; 
                        }
                    }
                Atomic
                    {
                    Name = psi(t+h)0
                    Ports = 2 ; 1
                    Path = qss/qss_wsum.h
                    Description = y = K[0] * u0 + K[1] * u1 + ... + K[7] * u7 (QSS1 to 4)
                    Graphic
                        {
                        Position = -8430 ; 6315
                        Dimension = 675 ; 720
                        Direction = Right
                        Color = 15
                        Icon = %continuous%sum.svg
                        }
                    Parameters
                        {
                        K[0] = Str; h ; 
                        K[1] = Str; 1 ; 
                        K[2] = Str; 0 ; 
                        K[3] = Str; 0 ; 
                        K[4] = Str; 0 ; 
                        K[5] = Str; 0 ; 
                        K[6] = Str; 0 ; 
                        K[7] = Str; 0 ; 
                        Inputs = Str; %Inputs ; 
                        }
                    }
                Atomic
                    {
                    Name = GnuPlot0
                    Ports = 1 ; 0
                    Path = sinks/gnuplot.h
                    Description = Plot input signal using GnuPlot
                    Graphic
                        {
                        Position = -4005 ; 3840
                        Dimension = 675 ; 720
                        Direction = Right
                        Color = 15
                        Icon = %sinks%gnuplot.svg
                        }
                    Parameters
                        {
                        Inputs = Str; %Inputs ; Number of inputs
                        Format = Str; set xrange [0:%tf] @ set grid @ set title 'Plot' ; General Formatting (use @ as line break)
                        Format1 = Str; with lines title 'First output' ; Formatting options for input 1
                        Format2 = Str;  ; Formatting options for input 2
                        Format3 = Str;  ; Formatting options for input 3
                        Format4 = Str;  ; Formatting options for input 4
                        Format5 = Str;  ; Formatting options for input 5
                        }
                    }
                Atomic
                    {
                    Name = To Disk2
                    Ports = 1 ; 0
                    Path = sinks\to_disk.h
                    Description = Save the values (event,t) in a file.
                    Graphic
                        {
                        Position = -2355 ; 3045
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %sinks%todisk.svg
                        }
                    Parameters
                        {
                        File = Str; theta.csv ; file name
                        }
                    }
                Atomic
                    {
                    Name = To Disk3
                    Ports = 1 ; 0
                    Path = sinks\to_disk.h
                    Description = Save the values (event,t) in a file.
                    Graphic
                        {
                        Position = -2355 ; 6570
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %sinks%todisk.svg
                        }
                    Parameters
                        {
                        File = Str; psi.csv ; file name
                        }
                    }
                Point
                    {
                    ConectedLines = 3 ; 23 ; 36
                    ConectedExtrems = Org ; Org ; Org
                    Position = -11370 ; 4440
                    }
                Point
                    {
                    ConectedLines = 6 ; 14 ; 26
                    ConectedExtrems = Org ; Org ; Org
                    Position = -10920 ; 7440
                    }
                Point
                    {
                    ConectedLines = 8 ; 25 ; 41
                    ConectedExtrems = Org ; Org ; Org
                    Position = -8820 ; 7440
                    }
                Point
                    {
                    ConectedLines = 4 ; 15 ; 22
                    ConectedExtrems = Org ; Org ; Org
                    Position = -5670 ; 465
                    }
                Point
                    {
                    ConectedLines = 10 ; 16 ; 33
                    ConectedExtrems = Org ; Org ; Org
                    Position = -5070 ; 2190
                    }
                Point
                    {
                    ConectedLines = 12 ; 24 ; 37
                    ConectedExtrems = Org ; Org ; Org
                    Position = -8070 ; 6015
                    }
                Point
                    {
                    ConectedLines = 8 ; 17 ; 26
                    ConectedExtrems = Org ; Org ; Org
                    Position = -9870 ; 7440
                    }
                Point
                    {
                    ConectedLines = 5 ; 7 ; 24
                    ConectedExtrems = Org ; Org ; Org
                    Position = -9645 ; 6015
                    }
                Point
                    {
                    ConectedLines = 7 ; 11 ; 20
                    ConectedExtrems = Org ; Org ; Org
                    Position = -10170 ; 6015
                    }
                Point
                    {
                    ConectedLines = 9 ; 18 ; 28
                    ConectedExtrems = Org ; Org ; Org
                    Position = -5445 ; 3915
                    }
                Point
                    {
                    ConectedLines = 9 ; 36 ; 39
                    ConectedExtrems = Org ; Org ; Org
                    Position = -5445 ; 4200
                    }
                Point
                    {
                    ConectedLines = 35 ; 38 ; 39
                    ConectedExtrems = Org ; Org ; Org
                    Position = -4875 ; 4200
                    }
                Point
                    {
                    ConectedLines = 34 ; 40 ; 41
                    ConectedExtrems = Org ; Org ; Org
                    Position = -5400 ; 6900
                    }
                Line
                    {
                    Source = Cmp ;  11 ;  1 ; 0
                    Sink = Cmp ;  4 ;  1 ; -1
                    PointX = -7320 ; -7320 ; -6210
                    PointY = 3915 ; 3915 ; 3915
                    }
                Line
                    {
                    Source = Cmp ;  6 ;  1 ; 0
                    Sink = Cmp ;  1 ;  1 ; -1
                    PointX = -7950 ; -6765 ; -6765
                    PointY = 825 ; 825 ; 750
                    }
                Line
                    {
                    Source = Pnt ;  1 ; -1 ; 0
                    Sink = Cmp ;  7 ;  1 ; -1
                    PointX = -11370 ; -13170 ; -13170 ; -11985
                    PointY = 4440 ; 4440 ; 765 ; 765
                    }
                Line
                    {
                    Source = Cmp ;  1 ;  1 ; 0
                    Sink = Pnt ;  4 ; -1 ; 0
                    PointX = -5850 ; -5670 ; -5670
                    PointY = 750 ; 750 ; 465
                    }
                Line
                    {
                    Source = Cmp ;  10 ;  2 ; -1
                    Sink = Pnt ;  8 ; -1 ; 0
                    PointX = -9435 ; -9645 ; -9645
                    PointY = 4215 ; 4215 ; 6015
                    }
                Line
                    {
                    Source = Cmp ;  8 ;  2 ; -1
                    Sink = Pnt ;  2 ; -1 ; 0
                    PointX = -9885 ; -10920 ; -10920
                    PointY = 2565 ; 2565 ; 7440
                    }
                Line
                    {
                    Source = Pnt ;  8 ; -1 ; 0
                    Sink = Pnt ;  9 ; -1 ; 0
                    PointX = -9645 ; -10170 ; -10170
                    PointY = 6015 ; 6015 ; 6015
                    }
                Line
                    {
                    Source = Pnt ;  3 ; -1 ; 0
                    Sink = Pnt ;  7 ; -1 ; 0
                    PointX = -8820 ; -9870 ; -9870
                    PointY = 7440 ; 7440 ; 7440
                    }
                Line
                    {
                    Source = Pnt ;  10 ; -1 ; 0
                    Sink = Pnt ;  11 ; -1 ; 0
                    PointX = -5445 ; -5445 ; -5445
                    PointY = 3915 ; 3915 ; 4200
                    }
                Line
                    {
                    Source = Pnt ;  5 ; -1 ; 0
                    Sink = Cmp ;  9 ;  1 ; -1
                    PointX = -5070 ; -5070 ; -8085 ; -8085
                    PointY = 2190 ; 1665 ; 1665 ; 2265
                    }
                Line
                    {
                    Source = Cmp ;  8 ;  3 ; -1
                    Sink = Pnt ;  9 ; -1 ; 0
                    PointX = -9885 ; -10170 ; -10170
                    PointY = 2790 ; 2790 ; 6015
                    }
                Line
                    {
                    Source = Cmp ;  14 ;  2 ; -1
                    Sink = Pnt ;  6 ; -1 ; 0
                    PointX = -7740 ; -8070 ; -8070
                    PointY = 5550 ; 5550 ; 6015
                    }
                Line
                    {
                    Source = Cmp ;  15 ;  1 ; 0
                    Sink = Cmp ;  5 ;  1 ; -1
                    PointX = -7695 ; -7695 ; -6360
                    PointY = 6690 ; 6690 ; 6690
                    }
                Line
                    {
                    Source = Pnt ;  2 ; -1 ; 0
                    Sink = Cmp ;  7 ;  2 ; -1
                    PointX = -10920 ; -12870 ; -12870 ; -11985
                    PointY = 7440 ; 7440 ; 915 ; 915
                    }
                Line
                    {
                    Source = Pnt ;  4 ; -1 ; 0
                    Sink = Cmp ;  6 ;  1 ; -1
                    PointX = -5670 ; -5670 ; -9090 ; -9090
                    PointY = 465 ; -60 ; -60 ; 750
                    }
                Line
                    {
                    Source = Cmp ;  2 ;  1 ; 0
                    Sink = Pnt ;  5 ; -1 ; 0
                    PointX = -5070 ; -5070 ; -5070
                    PointY = 2415 ; 2415 ; 2190
                    }
                Line
                    {
                    Source = Cmp ;  10 ;  1 ; -1
                    Sink = Pnt ;  7 ; -1 ; 0
                    PointX = -9435 ; -9870 ; -9870
                    PointY = 3915 ; 3915 ; 7440
                    }
                Line
                    {
                    Source = Cmp ;  11 ;  1 ; -1
                    Sink = Pnt ;  10 ; -1 ; 0
                    PointX = -8235 ; -8235 ; -5445 ; -5445
                    PointY = 3765 ; 3390 ; 3390 ; 3915
                    }
                Line
                    {
                    Source = Cmp ;  9 ;  1 ; 0
                    Sink = Cmp ;  2 ;  1 ; -1
                    PointX = -7170 ; -7170 ; -5985
                    PointY = 2415 ; 2415 ; 2415
                    }
                Line
                    {
                    Source = Pnt ;  9 ; -1 ; 0
                    Sink = Cmp ;  7 ;  3 ; -1
                    PointX = -10170 ; -11985 ; -11985
                    PointY = 6015 ; 6015 ; 1140
                    }
                Line
                    {
                    Source = Cmp ;  8 ;  1 ; 0
                    Sink = Cmp ;  9 ;  2 ; -1
                    PointX = -8970 ; -8970 ; -8085
                    PointY = 2565 ; 2565 ; 2565
                    }
                Line
                    {
                    Source = Cmp ;  12 ;  1 ; -1
                    Sink = Pnt ;  4 ; -1 ; 0
                    PointX = -3840 ; -5670 ; -5670
                    PointY = 375 ; 375 ; 465
                    }
                Line
                    {
                    Source = Cmp ;  8 ;  1 ; -1
                    Sink = Pnt ;  1 ; -1 ; 0
                    PointX = -9885 ; -11370 ; -11370
                    PointY = 2415 ; 2415 ; 4440
                    }
                Line
                    {
                    Source = Pnt ;  6 ; -1 ; 0
                    Sink = Pnt ;  8 ; -1 ; 0
                    PointX = -8070 ; -9645 ; -9645
                    PointY = 6015 ; 6015 ; 6015
                    }
                Line
                    {
                    Source = Cmp ;  15 ;  2 ; -1
                    Sink = Pnt ;  3 ; -1 ; 0
                    PointX = -8610 ; -8820 ; -8820
                    PointY = 6840 ; 6840 ; 7440
                    }
                Line
                    {
                    Source = Pnt ;  7 ; -1 ; 0
                    Sink = Pnt ;  2 ; -1 ; 0
                    PointX = -9870 ; -9870 ; -10920
                    PointY = 7440 ; 7440 ; 7440
                    }
                Line
                    {
                    Source = Cmp ;  10 ;  1 ; 0
                    Sink = Cmp ;  11 ;  2 ; -1
                    PointX = -8520 ; -8520 ; -8235
                    PointY = 4065 ; 4065 ; 4065
                    }
                Line
                    {
                    Source = Cmp ;  4 ;  1 ; 0
                    Sink = Pnt ;  10 ; -1 ; 0
                    PointX = -5445 ; -5445 ; -5445
                    PointY = 3915 ; 3915 ; 3915
                    }
                Line
                    {
                    Source = Prt ;  1 ;  1 ; 0
                    Sink = Cmp ;  14 ;  1 ; -1
                    PointX = -15075 ; -7740 ; -7740
                    PointY = 5400 ; 5400 ; 5250
                    }
                Line
                    {
                    Source = Prt ;  2 ;  1 ; 0
                    Sink = Cmp ;  15 ;  1 ; -1
                    PointX = -15075 ; -15075 ; -8565
                    PointY = 6525 ; 6525 ; 6525
                    }
                Line
                    {
                    Source = Cmp ;  7 ;  1 ; 0
                    Sink = Cmp ;  6 ;  2 ; -1
                    PointX = -11025 ; -11025 ; -9090
                    PointY = 900 ; 900 ; 900
                    }
                Line
                    {
                    Source = Cmp ;  14 ;  1 ; 0
                    Sink = Cmp ;  3 ;  1 ; -1
                    PointX = -6825 ; -6390 ; -6390
                    PointY = 5400 ; 5400 ; 5400
                    }
                Line
                    {
                    Source = Cmp ;  13 ;  1 ; -1
                    Sink = Pnt ;  5 ; -1 ; 0
                    PointX = -3240 ; -3240 ; -5070 ; -5070
                    PointY = 2100 ; 2100 ; 2100 ; 2190
                    }
                Line
                    {
                    Source = Cmp ;  5 ;  1 ; 0
                    Sink = Pnt ;  13 ; -1 ; 0
                    PointX = -5400 ; -5400 ; -5400
                    PointY = 6675 ; 6675 ; 6900
                    }
                Line
                    {
                    Source = Cmp ;  16 ;  1 ; -1
                    Sink = Pnt ;  12 ; -1 ; 0
                    PointX = -4140 ; -4140 ; -4875
                    PointY = 4200 ; 4200 ; 4200
                    }
                Line
                    {
                    Source = Pnt ;  11 ; -1 ; 0
                    Sink = Pnt ;  1 ; -1 ; 0
                    PointX = -5445 ; -5445 ; -5445 ; -11370 ; -11370
                    PointY = 4200 ; 4200 ; 4950 ; 4950 ; 4440
                    }
                Line
                    {
                    Source = Cmp ;  3 ;  1 ; 0
                    Sink = Pnt ;  6 ; -1 ; 0
                    PointX = -5475 ; -5475 ; -5475 ; -5475 ; -8070
                    PointY = 5400 ; 5925 ; 5925 ; 6015 ; 6015
                    }
                Line
                    {
                    Source = Cmp ;  17 ;  1 ; -1
                    Sink = Pnt ;  12 ; -1 ; 0
                    PointX = -2490 ; -4875 ; -4875
                    PointY = 3375 ; 3375 ; 4200
                    }
                Line
                    {
                    Source = Pnt ;  12 ; -1 ; 0
                    Sink = Pnt ;  11 ; -1 ; 0
                    PointX = -4875 ; -5445 ; -5445
                    PointY = 4200 ; 4200 ; 4200
                    }
                Line
                    {
                    Source = Cmp ;  18 ;  1 ; -1
                    Sink = Pnt ;  13 ; -1 ; 0
                    PointX = -2490 ; -5400 ; -5400
                    PointY = 6900 ; 6900 ; 6900
                    }
                Line
                    {
                    Source = Pnt ;  13 ; -1 ; 0
                    Sink = Pnt ;  3 ; -1 ; 0
                    PointX = -5400 ; -5400 ; -5400 ; -5400 ; -8820
                    PointY = 6900 ; 7200 ; 7200 ; 7440 ; 7440
                    }
                }
            }
                Atomic
                    {
                    Name = a(t)0
                    Ports = 0 ; 1
                    Path = sources/step_sci.h
                    Description = Step
                    Graphic
                        {
                        Position = -9675 ; -2475
                        Dimension = 765 ; 765
                        Direction = Right
                        Color = 15
                        Icon = %sources%step.svg
                        }
                    Parameters
                        {
                        u0 = Str; 1 ; initial value (Scilab expression)
                        t0 = Str; 2 ; step time  (Scilab expression)
                        uf = Str; 0 ; final value  (Scilab expression)
                        }
                    }
                Atomic
                    {
                    Name = Step0
                    Ports = 0 ; 1
                    Path = sources/step_sci.h
                    Description = Step
                    Graphic
                        {
                        Position = -10905 ; -1005
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %sources%step.svg
                        }
                    Parameters
                        {
                        u0 = Str; 0.1 ; initial value (Scilab expression)
                        t0 = Str; 1 ; step time  (Scilab expression)
                        uf = Str; -0.1 ; final value  (Scilab expression)
                        }
                    }
                Atomic
                    {
                    Name = Step1
                    Ports = 0 ; 1
                    Path = sources/step_sci.h
                    Description = Step
                    Graphic
                        {
                        Position = -10830 ; 165
                        Dimension = 675 ; 720
                        Direction = Right
                        Color = 15
                        Icon = %sources%step.svg
                        }
                    Parameters
                        {
                        u0 = Str; 1 ; initial value (Scilab expression)
                        t0 = Str; 2 ; step time  (Scilab expression)
                        uf = Str; 0 ; final value  (Scilab expression)
                        }
                    }
                Atomic
                    {
                    Name = omega(t)0
                    Ports = 2 ; 1
                    Path = qss/qss_multiplier.h
                    Description = Multiplier. (QSS1 to 4)
                    Graphic
                        {
                        Position = -7755 ; -480
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %continuous%multiplier.svg
                        }
                    Parameters
                        {
                        Advance method = Lst; 1%Purely static%Estimate step% ; 
                        dQmin = Str; 1e-6 ; 
                        dQrel = Str; 1e-3 ; 
                        }
                    }
                Line
                    {
                    Source = Cmp ;  3 ;  1 ; 0
                    Sink = Cmp ;  5 ;  1 ; -1
                    PointX = -10125 ; -7890 ; -7890
                    PointY = -675 ; -675 ; -300
                    }
                Line
                    {
                    Source = Cmp ;  4 ;  1 ; 0
                    Sink = Cmp ;  5 ;  2 ; -1
                    PointX = -10050 ; -7890 ; -7890
                    PointY = 525 ; 525 ; 0
                    }
                Line
                    {
                    Source = Cmp ;  2 ;  1 ; 0
                    Sink = Cmp ;  1 ;  1 ; -1
                    PointX = -8775 ; -8775 ; -5415
                    PointY = -2100 ; -2100 ; -2100
                    }
                Line
                    {
                    Source = Cmp ;  5 ;  1 ; 0
                    Sink = Cmp ;  1 ;  2 ; -1
                    PointX = -6975 ; -5415 ; -5415
                    PointY = -150 ; -150 ; -1800
                    }
        }
    }
